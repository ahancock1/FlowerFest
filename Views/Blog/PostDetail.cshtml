@model Post
@inject IOptionsSnapshot<BlogSettings> settings
@{
    ViewData["Title"] = Model.Title;
    ViewData["Description"] = Model.Excerpt;
    string host = Context.Request.Scheme + "://" + Context.Request.Host;
}

<article class="post" itemscope itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
    <div class="col-sm-12">
        <header>
            <!-- Post Title -->
            <h1 itemprop="name headline">
                @Model.Title
            </h1>
            <!-- Post Time -->
            <time datetime="@Model.PublishedDate.ToString("s")" itemprop="datePublished">Published @Model.PublishedDate.ToString("MMMM d, yyyy")</time>
            <!-- Edit -->
            @if (User.Identity.IsAuthenticated)
            {
                <a asp-controller="Blog" asp-action="edit" asp-route-id="@Model.ID" title="Edit the post">Edit post</a>
            }
        </header>
    </div>
    <div class="col-sm-12" itemprop="articleBody mainEntityOfPage" cdnify>
        @Html.Raw(PostHelper.CompileContent(Model))
    </div>
    <div class="col-sm-12">
        @if (Model.Categories.Any())
        {
            <text> Posted in </text>
            <ul class="categories">
                @foreach (var category in Model.Categories)
                {
                    <li>
                        <a asp-controller="Blog" asp-action="Category" asp-route-category="@category.ToLowerInvariant()">@category</a>
                    </li>
                }
            </ul>
            <text>and has</text>
        }
        <a href="@Model.Link#comments" itemprop="discussionUrl" title="Go to the comments section">
            <span itemprop="commentCount">@Model.Comments.Count</span> comments
        </a>
        <meta itemprop="author" content="@settings.Value.Owner" />
        <meta itemprop="dateModified" content="@Model.LastModified.ToString("s")" />
        <meta itemprop="mainEntityOfPage" content="@(host + Model.Link)" />
    </div>
</article>

@{
    //await Html.RenderPartialAsync("_SocialSharing", Model.Title);
    await Html.RenderPartialAsync("Comments");
}

